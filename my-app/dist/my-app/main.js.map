{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/channel/channel.component.css","webpack:///./src/app/channel/channel.component.html","webpack:///./src/app/channel/channel.component.ts","webpack:///./src/app/file-system.service.ts","webpack:///./src/app/group/group.component.css","webpack:///./src/app/group/group.component.html","webpack:///./src/app/group/group.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/mongo.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\" id=\\\"pageHeader\\\" class=\\\"container-fluid\\\">\\r\\n  <h1>\\r\\n    University Chat\\r\\n  </h1>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {Router} from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'my-app';\n\n  constructor(private router:Router,private form:FormsModule) { }\n\n  ngOnInit() {\n    this.router.navigateByUrl('/login')\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {FormsModule} from '@angular/forms'\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { GroupComponent } from './group/group.component';\r\nimport { MongoService } from './mongo.service';\r\nimport { FileSystemService} from './file-system.service';\r\nimport { ChannelComponent } from './channel/channel.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    GroupComponent,\r\n    ChannelComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot([\r\n      {\"path\":\"login\",\"component\":LoginComponent},\r\n      {\"path\":\"group\",\"component\":GroupComponent},\r\n      {\"path\":\"channel\",\"component\":ChannelComponent},\r\n    ]),\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [MongoService, FileSystemService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<button id=\\\"backBtn\\\" class=\\\"btn btn-success btn-primary\\\" (click)=\\\"back()\\\">Go Back</button>\\r\\n<div class=\\\"row\\\" style=\\\"margin-right: 0px;\\\">\\r\\n  <div class=\\\"col-sm-10\\\" id=\\\"groups\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\" id=\\\"cardhead\\\">\\r\\n        <h2>Channel: {{channel.channel_name}}</h2>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\" id=\\\"cardbody\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n            <div *ngFor=\\\"let message of message_list\\\">\\r\\n              <span><p>{{message.name}} : </p></span>\\r\\n              <span><p>{{message.message}}</p></span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-footer\\\">\\r\\n        <div>\\r\\n          <form>\\r\\n            Message:\\r\\n            <input type=\\\"text\\\">\\r\\n            <button class=\\\"btn btn-primary btn-success\\\">Send Message</button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-2\\\" id=\\\"users\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\" id=\\\"cardhead\\\">\\r\\n          <div class=\\\"col-sm-12 text-center\\\">\\r\\n              <h3>Users:</h3>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n            <span data-toggle=\\\"modal\\\" data-target=\\\"#add_user_channel\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-block btn-success\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Add user\\\">Add a User</button>\\r\\n            </span>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\" id=\\\"userbody\\\">\\r\\n        <div class=\\\"card\\\" *ngFor=\\\"let users of c_user_list\\\" style=\\\"margin-bottom: 5px;\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <span class=\\\"col-sm-12\\\">\\r\\n                  <h5>{{users.name}}</h5>\\r\\n              </span>\\r\\n              <button *ngIf=\\\"issuperadmin\\\" id=\\\"userdeleteBtn\\\" class=\\\"btn btn-primary btn-danger\\\" (click)=\\\"delete_user_channel(users.name)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Users\\\"><img id=\\\"userdeleteImg\\\" src=\\\"../assets/x-icon.png\\\"></button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"add_user_channel\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"add_user_channelTitle\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <form (submit)=\\\"addUserChannel($event)\\\">\\r\\n          <div class=\\\"modal-header\\\" id=\\\"cardhead\\\">\\r\\n            <h5 class=\\\"modal-title\\\" id=\\\"add_user_channelTitle\\\">Add Group User</h5>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class= \\\"col-sm-12\\\">\\r\\n                User's Name:<br>\\r\\n                <input type=\\\"text\\\" [(ngModel)]='channelusername' name=\\\"channelusername\\\"><br>\\r\\n                <div *ngIf=\\\"cunamefalse\\\" id=\\\"errormessage\\\"><h4>Invalid input! Please enter valid user name</h4></div>\\r\\n                <div *ngIf=\\\"cuserfalse\\\" id=\\\"errormessage\\\"><h4>Unkown User! Please enter valid user name</h4></div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add User</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {MongoService} from '../mongo.service'\r\nimport {FileSystemService} from '../file-system.service'\r\n\r\n@Component({\r\n  selector: 'app-channel',\r\n  templateUrl: './channel.component.html',\r\n  styleUrls: ['./channel.component.css']\r\n})\r\nexport class ChannelComponent implements OnInit {\r\n\r\n  isgroupadmin = false\r\n  issuperadmin = false\r\n  cunamefalse = false\r\n  cuserfalse = false\r\n  channel:any\r\n  message_list:any\r\n  user_list = []\r\n  c_user_list = []\r\n  channelusername:any\r\n  user_name_list:any\r\n  userOBJ:any\r\n\r\n  constructor(private router:Router,private form:FormsModule, private mongo:MongoService,private fs:FileSystemService) { }\r\n\r\n  //this is on load\r\n  ngOnInit() {\r\n    this.get_channel();\r\n    this.getUsers()\r\n    //checks if the logged in user is either a group user or super user\r\n    if(localStorage.getItem(\"roles\").includes(\"Group_User\")){\r\n      this.isgroupadmin = true\r\n    }else{\r\n      this.isgroupadmin = false\r\n    }\r\n    if(localStorage.getItem(\"roles\").includes(\"Super_User\")){\r\n      this.issuperadmin = true\r\n    }else{\r\n      this.issuperadmin = false\r\n    }\r\n  }\r\n  //this sends you back to group page\r\n  back(){\r\n    this.router.navigateByUrl('/group')\r\n  }\r\n  //this sends a request to the server to get all channels\r\n  get_channel(){\r\n    this.fs.get_channel().subscribe(channel =>{\r\n      console.log(\"getting users\")\r\n      console.log(channel)\r\n      for (var i = 0; i < channel.channels.length; i++){\r\n        if (channel.channels[i].channel_name == localStorage.getItem(\"channel_name\")){\r\n          this.make_lists(channel.channels[i])\r\n          return\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // this makes a message list\r\n  make_lists(channel){\r\n    this.channel = channel\r\n    this.message_list = channel.messages\r\n    for(var i = 0; i < channel.users.length; i++){\r\n      this.c_user_list.push({name: channel.users[i]})\r\n    }\r\n    console.log(this.channel)\r\n    console.log(this.user_list)\r\n    console.log(this.message_list)\r\n  }\r\n  //add user to channel\r\n  addUserChannel(event){\r\n    event.preventDefault()\r\n    console.log(\"Adding user to \"+this.channelusername+\" channel\")\r\n    this.cureset()\r\n    if(this.channelusername == \"\" || this.channelusername == null){\r\n      this.cunamefalse = true\r\n    }else{\r\n      if(this.user_name_list.includes(this.channelusername)){\r\n        console.log(\"Adding user to \"+this.channelusername+\" group\")\r\n        this.fs.edit_channel(this.channelusername,localStorage.getItem(\"channel_name\")).subscribe(channels=>{\r\n          console.log(channels)\r\n          this.c_user_list = []\r\n          this.get_channel()\r\n          this.fs.edit_group(this.channelusername,localStorage.getItem(\"group_name\")).subscribe(groups=>{\r\n\r\n          })\r\n        })\r\n        this.channelusername = ''\r\n      }else{\r\n        this.cuserfalse = true\r\n      }\r\n    }\r\n  }\r\n  //this resets the error stat of the channel user form\r\n  cureset(){\r\n    this.cunamefalse = false\r\n    this.cuserfalse = false\r\n  }\r\n\r\n  // sends a request to the server to get all users then puts them in a list.\r\n  getUsers(){\r\n    this.fs.get_users().subscribe(users =>{\r\n      console.log(\"getting users\")\r\n      console.log(users)\r\n      this.user_list = users.users\r\n      this.user_name_list = []\r\n      for(var i = 0; i < users.users.length;i++){\r\n        this.user_name_list.push(users.users[i].name)\r\n      }\r\n    })\r\n  }\r\n\r\n  //this sends a request to the server to delete a user from a channel\r\n  delete_user_channel(users){\r\n    console.log(\"deleteing \"+users+\" from channel \"+localStorage.getItem(\"channel_name\"))\r\n    this.fs.delete_channel_user(localStorage.getItem(\"channel_name\"), users).subscribe(channels=>{\r\n      console.log(channels)\r\n      for(var i = 0;i<this.c_user_list.length;i++){\r\n        if (this.c_user_list[i].name == users){\r\n          this.c_user_list.splice(i,1)\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Observable} from \"rxjs\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileSystemService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  //check if user exists\r\n  check_user(username:string,password:string): Observable<any>{\r\n    return this.http.post('/api/auth',{\r\n      username:username,\r\n      password:password\r\n    });\r\n  }\r\n\r\n  //get all users\r\n  get_users():Observable<any>{\r\n    return this.http.get('/api/users',{\r\n\r\n    })\r\n  }\r\n\r\n  //add a user\r\n  add_user(userOBJ:object):Observable<any>{\r\n    return this.http.post('/api/users',{\r\n      userOBJ:userOBJ\r\n    })\r\n  }\r\n\r\n  //edit a user\r\n  edit_user(userObj:object):Observable<any>{\r\n    return this.http.put('/api/users',{\r\n      userObj:userObj\r\n    })\r\n  }\r\n\r\n  //delete a user\r\n  delete_users(name:string):Observable<any>{\r\n    return this.http.delete(`/api/users/${name}`,{\r\n\r\n    })\r\n  }\r\n\r\n  //get all groups\r\n  get_groups():Observable<any>{\r\n    return this.http.get('/api/groups',{\r\n\r\n    })\r\n  }\r\n\r\n  //add a group\r\n  add_group(groupObj:object):Observable<any>{\r\n    return this.http.post('/api/groups',{\r\n      groupObj:groupObj\r\n    })\r\n  }\r\n\r\n  //edits a group\r\n  edit_group(groupuser,groupname):Observable<any>{\r\n    return this.http.put('/api/groups',{\r\n      groupuser:groupuser,\r\n      groupname:groupname\r\n    })\r\n  }\r\n\r\n  //deletes a group\r\n  delete_group(name:string):Observable<any>{\r\n    console.log(name)\r\n    return this.http.delete(`/api/groups/${name}`, {})\r\n  }\r\n\r\n  //gets all channels\r\n  get_channels():Observable<any>{\r\n    return this.http.get('/api/channels',{\r\n\r\n    })\r\n  }\r\n\r\n  //gets a single channel\r\n  get_channel():Observable<any>{\r\n    return this.http.get('/api/channels',{\r\n\r\n    })\r\n  }\r\n\r\n  //adds a channel\r\n  add_channel(channel:object):Observable<any>{\r\n    return this.http.post('/api/channels',{\r\n      channelobj:channel\r\n    })\r\n  }\r\n\r\n  //edits a channel\r\n  edit_channel(channeluser:string,channelname:string):Observable<any>{\r\n    return this.http.put('/api/channels',{\r\n      channeluser:channeluser,\r\n      channelname:channelname\r\n    })\r\n  }\r\n\r\n  //delets a channel\r\n  delete_channel(name:string):Observable<any>{\r\n    return this.http.delete(`/api/channels/${name}`,{\r\n      \r\n    })\r\n  }\r\n  //to delete a user from a channel\r\n  delete_channel_user(channel,name):Observable<any>{\r\n    return this.http.delete(`/api/channels/${channel}/${name}`,{\r\n\r\n    })\r\n  }\r\n  //to delete a user from a group\r\n  delete_group_user(group,name):Observable<any>{\r\n    return this.http.delete(`/api/groups/${group}/${name}`,{\r\n\r\n    })\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<form (submit)=\\\"logoutUser($event)\\\">\\r\\n  <button id=\\\"logoutBtn\\\" class=\\\"btn btn-success btn-primary\\\" type=\\\"submit\\\">Log Out</button>\\r\\n</form>\\r\\n<div class=\\\"row\\\" style=\\\"margin-right: 0px;\\\">\\r\\n  <div class=\\\"col-sm-10\\\" id=\\\"groups\\\">\\r\\n    <div class=\\\"card\\\" id=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\" id=\\\"cardhead\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n              <h2>Groups:</h2>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2\\\">\\r\\n              <span data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Add Groups\\\">\\r\\n                  <button *ngIf=\\\"isgroupadmin\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#add_group\\\">Add a group</button>\\r\\n                </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\" id=\\\"cardbody\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n            <div class='card' *ngFor=\\\"let group of combined_list\\\">\\r\\n              <div class=\\\"card-header\\\" id=\\\"cardhead\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <h3>\\r\\n                          {{group.name}}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                  <span *ngIf=\\\"isgroupadmin\\\" id=\\\"channelBtn\\\" class=\\\"col-sm-2\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Add Channel\\\"><button id=\\\"addchannel\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-success btn-block\\\" data-toggle=\\\"modal\\\" data-target=\\\"#add_channel\\\" (click)=\\\"adding_channel(group.id)\\\">Add Channel</button></span>\\r\\n                  <span *ngIf=\\\"isgroupadmin\\\" id=\\\"spandeleteBtn\\\" class=\\\"col-sm-1\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Group Users\\\"><button id=\\\"addUserBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-success btn-block\\\" data-toggle=\\\"modal\\\" data-target=\\\"#user_group\\\" (click)=\\\"group_users(group.id,group.users)\\\"><img id=\\\"addUserImage\\\" src=\\\"../assets/iconperson.png\\\"></button></span>\\r\\n                  <span *ngIf=\\\"isgroupadmin\\\" id=\\\"spanaddBtn\\\" class=\\\"col-sm-1\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Group\\\"><button (click)=\\\"delete_group(group.id)\\\" id=\\\"deleteBtn\\\" class=\\\"btn btn-primary btn-danger btn-block\\\"><img id=\\\"addUserImage\\\" src=\\\"../assets/x-icon.png\\\"></button></span>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <div *ngFor=\\\"let channel of group.channels\\\" class=\\\"row\\\" style=\\\"margin-bottom: 5px;\\\">\\r\\n                  <span class=\\\"col-sm-10\\\" id=\\\"channelBtn\\\"><button class='btn btn-info btn-block' (click)=\\\"openChannel(channel.name,group.name)\\\" style=\\\"padding-bottom: 10px;\\\">{{ channel.name }} </button></span>\\r\\n                  <span *ngIf=\\\"isgroupadmin\\\" class=\\\"col-sm-1\\\" id=\\\"spanaddBtn\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Channel Users\\\"><button id=\\\"addUserBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-success btn-block\\\" data-toggle=\\\"modal\\\" data-target=\\\"#user_channel\\\" (click)=\\\"channel_users(channel.id, channel.users,group.id)\\\"><img id=\\\"addUserImage\\\" src=\\\"../assets/iconperson.png\\\"></button></span>\\r\\n                  <span *ngIf=\\\"isgroupadmin\\\" class=\\\"col-sm-1\\\" id=\\\"spandeleteBtn\\\"data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Channels\\\"><button id=\\\"deleteBtn\\\" class=\\\"btn btn-primary btn-danger btn-block\\\" (click)=\\\"delete_channel(channel.id,channel.name)\\\"><img id=\\\"addUserImage\\\" src=\\\"../assets/x-icon.png\\\"></button></span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-sm-2\\\" id=\\\"users\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\" id=\\\"cardhead\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12 text-center\\\">\\r\\n              <h3>Users:</h3>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n              <span *ngIf=\\\"isgroupadmin\\\" data-toggle=\\\"modal\\\" data-target=\\\"#add_user\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-block btn-success btn-primary\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Add user\\\">Add a User</button>\\r\\n              </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\" id=\\\"userbody\\\">\\r\\n        <div class=\\\"card\\\" *ngFor=\\\"let users of user_list\\\" style=\\\"margin-bottom: 5px;\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <span class=\\\"col-sm-12\\\">\\r\\n                  <h5>{{users.name}}</h5>\\r\\n              </span>\\r\\n              <button *ngIf=\\\"issuperadmin\\\" id=\\\"userdeleteBtn\\\" class=\\\"btn btn-primary btn-danger\\\" (click)=\\\"delete_user(users._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Users\\\"><img id=\\\"userdeleteImg\\\" src=\\\"../assets/x-icon.png\\\"></button>\\r\\n              <span *ngIf=\\\"isgroupadmin\\\" data-toggle=\\\"modal\\\" data-target=\\\"#edit_user\\\">\\r\\n                <button id=\\\"usereditBtn\\\" class=\\\"btn btn-primary btn-secondary\\\" (click)=\\\"edit_user(users)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Edit Users\\\"><img id=\\\"userdeleteImg\\\" src=\\\"../assets/icon-edit.png\\\"></button>\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"add_user\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"add_userTitle\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <form (submit)=\\\"addUser($event)\\\">\\r\\n        <div class=\\\"modal-header\\\" id=\\\"cardhead\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"add_userTitle\\\">Add User</h5>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class= \\\"col-sm-6\\\">\\r\\n                    Username:<br>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]='username' name=\\\"username\\\" required><br>\\r\\n                    Email:<br>\\r\\n                    <input type=\\\"email\\\" [(ngModel)]='useremail' name=\\\"email\\\"><br>\\r\\n                  </div>\\r\\n                  <div class= \\\"col-sm-6\\\">\\r\\n                    Password:<br>\\r\\n                    <input type=\\\"password\\\" [(ngModel)]='userpassword' name=\\\"password\\\"><br>\\r\\n                    Roles:<br>\\r\\n                    <select name=\\\"roles\\\" [(ngModel)]='userrole'>\\r\\n                      <option value=\\\"User\\\">User</option>\\r\\n                      <option value=\\\"Group_User\\\">Group_User</option>\\r\\n                      <option *ngIf=\\\"issuperadmin\\\" value=\\\"Super_User\\\">Super_User</option>\\r\\n                    </select><br>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"unamefalse\\\" id=\\\"errormessage\\\"><h4>Invalid input! Please enter a user name</h4></div>\\r\\n                <div *ngIf=\\\"uemailfalse\\\" id=\\\"errormessage\\\"><h4>Invalid input! Please enter a user email</h4></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"ureset()\\\">Cancel</button>\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success btn-primary\\\">Add User</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"edit_user\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"edit_userTitle\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <form (submit)=\\\"editUser($event)\\\">\\r\\n        <div class=\\\"modal-header\\\" id=\\\"cardhead\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"edit_userTitle\\\">Add User</h5>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class= \\\"col-sm-6\\\">\\r\\n                    Username:<br>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]='editusername' name=\\\"username\\\"><br>\\r\\n                    Email:<br>\\r\\n                    <input type=\\\"email\\\" [(ngModel)]='edituseremail' name=\\\"email\\\"><br>\\r\\n                  </div>\\r\\n                  <div class= \\\"col-sm-6\\\">\\r\\n                    Password:<br>\\r\\n                    <input type=\\\"password\\\" [(ngModel)]='edituserpassword' name=\\\"password\\\"><br>\\r\\n                    Roles:<br>\\r\\n                    <select name=\\\"roles\\\" [(ngModel)]='edituserrole'>\\r\\n                      <option value=\\\"User\\\">User</option>\\r\\n                      <option value=\\\"Group_User\\\">Group_User</option>\\r\\n                      <option *ngIf=\\\"issuperadmin\\\" value=\\\"Super_User\\\">Super_User</option>\\r\\n                    </select><br>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"eunamefalse\\\" id=\\\"errormessage\\\"><h4>Invalid input! Please enter a user name</h4></div>\\r\\n                <div *ngIf=\\\"euemailfalse\\\" id=\\\"errormessage\\\"><h4>Invalid input! Please enter a user email</h4></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"eureset()\\\">Cancel</button>\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success btn-primary\\\">Add User</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"add_group\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"add_groupTitle\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <form (submit)=\\\"addGroup($event)\\\">\\r\\n          <div class=\\\"modal-header\\\" id=\\\"cardhead\\\">\\r\\n            <h5 class=\\\"modal-title\\\" id=\\\"add_groupTitle\\\">Add Group</h5>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class= \\\"col-sm-12\\\">\\r\\n                Group Name:<br>\\r\\n                <input type=\\\"text\\\" [(ngModel)]='groupname' name=\\\"groupname\\\"><br>\\r\\n                <div *ngIf=\\\"gnamefalse\\\" id=\\\"errormessage\\\"><h4>Invalid input! Please enter a group name</h4></div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"greset()\\\">Cancel</button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-primary\\\">Add Group</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"add_channel\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"add_channelTitle\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <form (submit)=\\\"addChannel($event)\\\">\\r\\n        <div class=\\\"modal-header\\\" id=\\\"cardhead\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"add_channelTitle\\\">Add Channel</h5>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class= \\\"col-sm-12\\\">\\r\\n              Channel Name:<br>\\r\\n              <input type=\\\"text\\\" [(ngModel)]='channelname' name=\\\"channelname\\\"><br>\\r\\n              <div *ngIf=\\\"cnamefalse\\\" id=\\\"errormessage\\\"><h4>Invalid input! Please enter a channel name</h4></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"creset()\\\">Cancel</button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success btn-primary\\\" >Add Channel</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"user_channel\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"user_channelTitle\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\" id=\\\"cardhead\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"user_channelTitle\\\">User's of Channel</h5>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"conatiner-fluid\\\" id=\\\"useraddDiv\\\">\\r\\n            <form (submit)=\\\"addUserChannel($event)\\\" class=\\\"text-center\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]='channelusername' name=\\\"channeusername\\\">\\r\\n              <span><button id=\\\"useraddBtn\\\" type=\\\"submit\\\" class=\\\"btn btn-success btn-primary\\\">Add User</button></span>\\r\\n            </form>\\r\\n            <div *ngIf=\\\"cunamefalse\\\" id=\\\"errormessage\\\"><h4>Invalid input! Please enter valid user name</h4></div>\\r\\n            <div *ngIf=\\\"cuserfalse\\\" id=\\\"errormessage\\\"><h4>Unkown User! Please enter valid user name</h4></div>\\r\\n          </div>\\r\\n          <div class=\\\"card\\\" *ngFor=\\\"let users of c_user_list\\\" style=\\\"margin-bottom: 5px;\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <span class=\\\"col-sm-12\\\">\\r\\n                    <h5>{{users}}</h5>\\r\\n                </span>\\r\\n                <button *ngIf=\\\"isgroupadmin\\\" id=\\\"userdeleteBtn\\\" class=\\\"btn btn-primary btn-danger\\\" (click)=\\\"delete_user_channel(users)\\\"><img id=\\\"userdeleteImg\\\" src=\\\"../assets/x-icon.png\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"cureset()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"user_group\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"user_groupTitle\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\" id=\\\"cardhead\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"user_groupTitle\\\">User's of group: {{group_id}}</h5>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"conatiner-fluid\\\" id=\\\"useraddDiv\\\">\\r\\n            <form (submit)=\\\"addUserGroup($event)\\\" class=\\\"text-center\\\">\\r\\n              <input type=\\\"text\\\" [(ngModel)]='groupusername' name=\\\"groupusername\\\">\\r\\n              <span><button id=\\\"useraddBtn\\\" type=\\\"submit\\\" class=\\\"btn btn-success btn-primary\\\">Add User</button></span>\\r\\n            </form>\\r\\n            <div *ngIf=\\\"gunamefalse\\\" id=\\\"errormessage\\\"><h4>invalid Input! Please enter valid user name</h4></div>\\r\\n            <div *ngIf=\\\"guserfalse\\\" id=\\\"errormessage\\\"><h4>Unkown User! Please enter valid user name</h4></div>\\r\\n          </div>\\r\\n          <div id=\\\"usercard\\\">\\r\\n            <div class=\\\"card\\\" *ngFor=\\\"let users of g_user_list\\\" style=\\\"margin-bottom: 5px;\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <span class=\\\"col-sm-12\\\">\\r\\n                    <h5>{{users}}</h5>\\r\\n                  </span>\\r\\n                  <button *ngIf=\\\"isgroupadmin\\\" id=\\\"userdeleteBtn\\\" class=\\\"btn btn-primary btn-danger\\\" (click)=\\\"delete_user_group(users)\\\"><img id=\\\"userdeleteImg\\\" src=\\\"../assets/x-icon.png\\\"></button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"gureset()\\\">Cancel</button>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {MongoService} from '../mongo.service'\r\nimport {FileSystemService} from '../file-system.service'\r\n\r\n@Component({\r\n  selector: 'app-group',\r\n  templateUrl: './group.component.html',\r\n  styleUrls: ['./group.component.css']\r\n})\r\nexport class GroupComponent implements OnInit {\r\n\r\n  group_name:any\r\n  channel_name:any\r\n  channel_id:any\r\n  group_id:any\r\n  isgroupadmin = false\r\n  issuperadmin = false\r\n  unamefalse = false\r\n  uemailfalse=false\r\n  gnamefalse = false\r\n  cnamefalse = false\r\n  cunamefalse = false\r\n  gunamefalse = false\r\n  cuserfalse = false\r\n  guserfalse = false\r\n  euemailfalse = false\r\n  eunamefalse = false\r\n  combined_list:any\r\n  group_list:any\r\n  channel_list:any\r\n  user_list:any\r\n  c_user_list:any\r\n  g_user_list:any\r\n  username:string = '';\r\n  useremail:string = '';\r\n  userpassword:string = '';\r\n  userrole:string = 'User';\r\n  userroles:any\r\n  userOBJ:any\r\n  groupname:any\r\n  channelname:any\r\n  btngroupname:any\r\n  channelusername:any\r\n  groupusername:any\r\n  userid:any\r\n  editusername:any\r\n  edituseremail:any\r\n  edituserpassword:any\r\n  edituserroles:any\r\n  edituserrole:any\r\n  user_name_list:any\r\n\r\n  constructor(private router:Router,private form:FormsModule, private mongo:MongoService,private fs:FileSystemService) { }\r\n\r\n  ngOnInit(){\r\n    //does these on page load.\r\n    this.getGroups()\r\n    this.getUsers()\r\n    //checks if the logged in user is either a group user or super user\r\n    if(localStorage.getItem(\"roles\").includes(\"Group_User\")){\r\n      this.isgroupadmin = true\r\n    }else{\r\n      this.isgroupadmin = false\r\n    }\r\n    if(localStorage.getItem(\"roles\").includes(\"Super_User\")){\r\n      this.issuperadmin = true\r\n    }else{\r\n      this.issuperadmin = false\r\n    }\r\n  }\r\n\r\n  //logs out the users and deletes the username and roles from the localstorage\r\n  logoutUser(event){\r\n    event.preventDefault();\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"roles\");\r\n    this.router.navigateByUrl('/login')\r\n  }\r\n  //sets the channel clicked on and sends you to the channel page\r\n  openChannel(channel,group){\r\n    localStorage.setItem(\"channel_name\",channel)\r\n    localStorage.setItem(\"group_name\", group)\r\n    this.router.navigateByUrl('/channel')\r\n  }\r\n  //add a user by sending object to fileservice that will send that data to server. checks if name and email is blank.\r\n  addUser(event){\r\n    event.preventDefault();\r\n    this.ureset()\r\n    console.log(\"adding user\")\r\n    if(this.username == \"\" || this.username == null){\r\n      if(this.useremail == \"\" || this.useremail == null){\r\n        this.uemailfalse = true\r\n      }\r\n      this.unamefalse = true\r\n    }else if(this.useremail == \"\" || this.useremail == null){\r\n      this.uemailfalse = true\r\n    }else{\r\n      if (this.userrole == \"Super_User\"){\r\n        this.userroles = [\"User\",\"Group_User\",this.userrole]\r\n        this.userOBJ = {name:this.username, password:this.userpassword,email:this.useremail,roles:this.userroles}\r\n        this.mongo.add_user(this.userOBJ).subscribe(users =>{\r\n          if (users.success == false){\r\n            alert(\"user already exists\")\r\n          }else{\r\n            this.getUsers()\r\n            this.clearUserData()\r\n          }\r\n        })\r\n      }\r\n      else if(this.userrole == \"Group_User\"){\r\n        this.userroles = [\"User\",this.userrole]\r\n        this.userOBJ = {name:this.username, password:this.userpassword,email:this.useremail,roles:this.userroles}\r\n        this.mongo.add_user(this.userOBJ).subscribe(users =>{\r\n          if (users.success == false){\r\n            alert(\"user already exists\")\r\n          }else{\r\n            this.getUsers()\r\n            this.clearUserData()\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        this.userOBJ = {name:this.username, password:this.userpassword,email:this.useremail,roles:[this.userrole]}\r\n        this.mongo.add_user(this.userOBJ).subscribe(users =>{\r\n          if (users.success == false){\r\n            alert(\"user already exists\")\r\n          }else{\r\n            this.getUsers()\r\n            this.clearUserData()\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n  //add a group, checks if the name is blank then sends request to server.\r\n  addGroup(event){\r\n    event.preventDefault();\r\n    this.greset()\r\n    if(this.groupname == \"\" || this.groupname == null){\r\n      this.gnamefalse = true\r\n    }else{\r\n      var groupObj = {group_name:this.groupname,users:[localStorage.getItem(\"username\")]}\r\n      this.mongo.add_group(groupObj).subscribe(groups =>{\r\n        if (groups.success == false){\r\n          alert(\"group already exists\")\r\n        }else{\r\n          this.getGroups();\r\n          this.groupname = ''\r\n        }\r\n      })\r\n    }\r\n  }\r\n  // sends a request to the server to get all users then puts them in a list.\r\n  getUsers(){\r\n    this.mongo.get_users().subscribe(users =>{\r\n      console.log(\"getting users\")\r\n      console.log(users.users)\r\n      this.user_list = users.users\r\n      this.user_name_list = []\r\n      for(var i = 0; i < users.users.length;i++){\r\n        console.log(\"users are: \"+users.users[i].name)\r\n        this.user_name_list.push(users.users[i].name)\r\n      }\r\n    })\r\n  }\r\n  //sends a request to the server to get all groups then puts them in a list.\r\n  getGroups(){\r\n    this.fs.get_groups().subscribe(groups =>{\r\n      console.log(groups)\r\n      this.getChannels(groups)\r\n    })\r\n  }\r\n  //sends a request to the server to get all channels then puts them in a list\r\n  getChannels(groups){\r\n    this.mongo.get_channels().subscribe(channels =>{\r\n      console.log(channels)\r\n      this.list_creation(groups,channels)\r\n    })\r\n  }\r\n\r\n  //create a list from the getGroups and getChannels.\r\n  list_creation(groups,channels){\r\n    var arr = []\r\n    for (var i = 0; i < groups.groups.length; i++){\r\n      var groupusers = groups.groups[i].users\r\n      if(groupusers.includes(localStorage.getItem(\"username\")) || localStorage.getItem(\"roles\").includes('super_admin')){\r\n        var obj = {\r\n            id: groups.groups[i]._id,\r\n            name: groups.groups[i].group_name,\r\n            channels : [],\r\n            users: groups.groups[i].users\r\n        }\r\n        for (var j = 0; j < channels.channels.length; j++){\r\n          if(groups.groups[i]._id == channels.channels[j].group_id){\r\n            var lst = channels.channels[j].users\r\n            if(lst.includes(localStorage.getItem(\"username\")) || localStorage.getItem(\"roles\").includes('Super_User') || localStorage.getItem(\"roles\").includes('Group_User')){\r\n              obj.channels.push({\r\n                id: channels.channels[j]._id,\r\n                name: channels.channels[j].channel_name,\r\n                users: channels.channels[j].users\r\n              })\r\n            }\r\n          }\r\n        }\r\n      arr.push(obj)\r\n      }\r\n    }\r\n    this.combined_list = arr\r\n    this.group_list = groups.groups\r\n    this.channel_list = channels.channels\r\n    console.log(arr)\r\n  }\r\n\r\n  //sends a request to the server to delete a group\r\n  delete_group(id){\r\n    console.log(\"delete group \"+ id)\r\n    this.mongo.delete_group(id).subscribe(groups =>{\r\n      console.log(groups)\r\n      this.getGroups()\r\n    })\r\n  }\r\n  // sends a request to the server to delete a user\r\n  delete_user(id){\r\n    this.mongo.delete_users(id).subscribe(users =>{\r\n      console.log(users)\r\n      this.getUsers()\r\n    })\r\n  }\r\n  //sets the group name to local storage so it can be accessed later\r\n  adding_channel(name){\r\n    this.group_id = name\r\n  }\r\n  //this function sets group name channel name and sets the user list to users so it can be displayed in a modal\r\n  channel_users(channelid,users,groupid){\r\n    this.channel_id = channelid\r\n    this.group_id = groupid\r\n    this.c_user_list = users\r\n  }\r\n  //this function sets the group name and the use list of the group so it can be displayed in a modal\r\n  group_users(groupid,users){\r\n    this.group_id = groupid\r\n    this.g_user_list = users\r\n  }\r\n  //this function clears the data a form would hold.\r\n  clearUserData(){\r\n    this.userpassword = ''\r\n    this.useremail = ''\r\n    this.username = ''\r\n    this.userrole = 'User'\r\n    this.userroles = []\r\n  }\r\n  //this sends a request to the server to delete a channel\r\n  delete_channel(id,name){\r\n    console.log(\"delete channel \"+ name)\r\n    this.fs.delete_channel(id).subscribe(channels=>{\r\n      console.log(channels)\r\n      this.getGroups()\r\n    })\r\n\r\n  }\r\n  //this sends a request to the server to add a channel\r\n  addChannel(event){\r\n    event.preventDefault()\r\n    this.creset()\r\n    if(this.channelname == \"\" || this.channelname == null){\r\n      this.cnamefalse = true\r\n    }else{\r\n      var channelObj = {channel_name:this.channelname,group_id:this.group_id,users:[localStorage.getItem(\"username\")]}\r\n      this.fs.add_channel(channelObj).subscribe(channels =>{\r\n        console.log(channels)\r\n        if (channels.success == false){\r\n          alert(\"channel already exists\")\r\n        }else{\r\n          this.channelname = \"\"\r\n          this.getGroups();\r\n        }\r\n      })\r\n    }\r\n  }\r\n  //this sends a request to the server to add a user to a group\r\n  addUserGroup(event){\r\n    event.preventDefault()\r\n    this.gureset()\r\n    if(this.groupusername == \"\" || this.groupusername == null){\r\n      this.gunamefalse = true\r\n    }else{\r\n      if(this.user_name_list.includes(this.groupusername)){\r\n        this.mongo.edit_group(this.groupusername,this.group_id).subscribe(groups=>{\r\n          console.log(groups)\r\n          if(this.g_user_list.includes(this.groupusername)){\r\n\r\n          }else{\r\n            this.g_user_list.push(this.groupusername)\r\n          }\r\n          this.getGroups()\r\n          this.groupusername = \"\"\r\n        })\r\n      }else{\r\n        this.guserfalse = true\r\n      }\r\n    }\r\n  }\r\n  //this sends a request to the server to add a user to a channel\r\n  addUserChannel(event){\r\n    event.preventDefault()\r\n    this.cureset()\r\n    if(this.channelusername == \"\" || this.channelusername == null){\r\n      this.cunamefalse = true\r\n    }else{\r\n      if(this.user_name_list.includes(this.channelusername)){\r\n        console.log(\"Adding user to \"+this.channelusername+\" group\")\r\n        this.mongo.edit_channel(this.channelusername,this.channel_id).subscribe(channels=>{\r\n          console.log(channels)\r\n          //if user already exists in channel\r\n          if(this.c_user_list.includes(this.channelusername)){\r\n\r\n          }else{ //then add to channel\r\n            this.c_user_list.push(this.channelusername)\r\n          }\r\n          this.mongo.edit_group(this.channelusername,this.group_id).subscribe(groups=>{\r\n            this.getGroups()\r\n          })\r\n          this.channelusername = \"\"\r\n        })\r\n      }else{\r\n        this.cuserfalse = true\r\n      }\r\n    }\r\n  }\r\n  //this sends a request to the server to delete a user from a channel\r\n  delete_user_channel(users){\r\n    this.mongo.delete_channel_user(this.channel_id, users).subscribe(channels=>{\r\n      this.getGroups()\r\n      for(var i = 0;i<this.c_user_list.length;i++){\r\n        if (this.c_user_list[i] == users){\r\n          this.c_user_list.splice(i,1)\r\n        }\r\n      }\r\n    })\r\n  }\r\n  //this sends a request to the server to delete a user from a group\r\n  delete_user_group(users){\r\n    this.mongo.delete_group_user(this.group_id, users).subscribe(channels=>{\r\n      this.getGroups()\r\n      for(var i = 0;i<this.g_user_list.length;i++){\r\n        if (this.g_user_list[i] == users){\r\n          this.g_user_list.splice(i,1)\r\n        }\r\n      }\r\n    })\r\n  }\r\n  //this resets the error stat of the group user form\r\n  gureset(){\r\n    this.gunamefalse = false\r\n    this.guserfalse = false\r\n  }\r\n  //this resets the error stat of the channel user form\r\n  cureset(){\r\n    this.cunamefalse = false\r\n    this.cuserfalse = false\r\n  }\r\n  //this resets the error stat of the user form\r\n  ureset(){\r\n    this.uemailfalse = false\r\n    this.unamefalse = false\r\n  }\r\n  //this resets the error stat of the group form\r\n  greset(){\r\n    this.gnamefalse = false\r\n  }\r\n  //this resets the error stat of the channel form\r\n  creset(){\r\n    this.cnamefalse = false\r\n  }\r\n  //this resets the error stat of the edit user form\r\n  eureset(){\r\n    this.euemailfalse = false\r\n    this.eunamefalse = false\r\n  }\r\n  //this sets the user info of the user clicked when going to edit a us\r\n  edit_user(user){\r\n    this.userid = user._id\r\n    this.editusername = user.name\r\n    this.edituseremail = user.email\r\n    this.edituserpassword = user.password\r\n    this.edituserrole = user.roles[user.roles.length - 1]\r\n  }\r\n  //this sends a request to the server to update a user info\r\n  editUser(event){\r\n    event.preventDefault();\r\n    this.eureset()\r\n    console.log(\"adding user\")\r\n    if(this.editusername == \"\" || this.editusername == null){\r\n      if(this.edituseremail == \"\" || this.edituseremail == null){\r\n        this.euemailfalse = true\r\n      }\r\n      this.eunamefalse = true\r\n    }else if(this.edituseremail == \"\" || this.edituseremail == null){\r\n      this.euemailfalse = true\r\n    }else{\r\n      if (this.edituserrole == \"Super_User\"){\r\n        this.edituserroles = [\"User\",\"Group_User\",this.edituserrole]\r\n        this.userOBJ = {id:this.userid, name:this.editusername, password:this.edituserpassword, email:this.edituseremail, roles:this.edituserroles}\r\n        this.mongo.edit_user(this.userOBJ).subscribe(users =>{\r\n          if (users.success == false){\r\n            alert(\"user already exists\")\r\n          }else{\r\n            this.getUsers()\r\n            this.clearUserData()\r\n          }\r\n        })\r\n      }\r\n      else if(this.edituserrole == \"Group_User\"){\r\n        this.edituserroles = [\"User\",this.edituserrole]\r\n        this.userOBJ = {id:this.userid, name:this.editusername, password:this.edituserpassword, email:this.edituseremail, roles:this.edituserroles}\r\n        this.mongo.edit_user(this.userOBJ).subscribe(users =>{\r\n          if (users.success == false){\r\n            alert(\"user already exists\")\r\n          }else{\r\n            this.getUsers()\r\n            this.clearUserData()\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        this.userOBJ = {id:this.userid, name:this.editusername, password:this.edituserpassword, email:this.edituseremail, roles:[this.edituserrole]}\r\n        this.mongo.edit_user(this.userOBJ).subscribe(users =>{\r\n          if (users.success == false){\r\n            alert(\"user already exists\")\r\n          }else{\r\n            this.getUsers()\r\n            this.clearUserData()\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" id=\\\"secondpageHeader\\\">\\r\\n</div>\\r\\n<div class=\\\"row\\\" style=\\\"margin-right: 0px\\\">\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n    <div class=\\\"card\\\" id=\\\"logincard\\\">\\r\\n      <form (submit)=\\\"loginUser($event)\\\">\\r\\n        <div class=\\\"card-body text-center\\\">\\r\\n          <span><h2>Log into Chat</h2></span><br>\\r\\n          <h4>Username:</h4>\\r\\n          <span><input placeholder=\\\"Username\\\" [(ngModel)]='username' name=\\\"username\\\" id=\\\"username\\\"></span><br>\\r\\n          <h4>Password:</h4>\\r\\n          <span><input type=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]='password' name=\\\"password\\\" id=\\\"password\\\"></span>\\r\\n          <div *ngIf=\\\"isfalse\\\" id=\\\"errormessage\\\"><h4>Unauthorized User</h4></div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-block\\\">Login</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {MongoService} from '../mongo.service'\r\nimport {FileSystemService} from '../file-system.service'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username:string = '';\r\n  password:string = '';\r\n  isfalse:boolean\r\n\r\n  constructor(private router:Router,private form:FormsModule, private mongo:MongoService,private fs:FileSystemService) { }\r\n\r\n  ngOnInit() {\r\n    //if browser supports storage\r\n    if (typeof(Storage) !== \"undefined\"){\r\n      console.log(\"found\")\r\n    }\r\n  }\r\n  //checks the given username agaisnt the list of known users, logs in if same name found othwise gives warning.\r\n  loginUser(event){\r\n    event.preventDefault();\r\n    this.fs.check_user(this.username, this.password).subscribe(data =>{\r\n      var result = data\r\n      //if the response from the server is true then log in.\r\n      if(result.success == true){\r\n        localStorage.setItem(\"roles\", result.username.roles)\r\n        localStorage.setItem(\"username\", this.username);\r\n        this.router.navigateByUrl('/group')\r\n        return\r\n      }\r\n      //otherwise if response from server is false then give error message.\r\n      this.isfalse = true\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MongoService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //get all users\r\n  get_users():Observable<any>{\r\n    return this.http.get('/api/users',{\r\n\r\n    })\r\n  }\r\n\r\n  //add a user\r\n  add_user(userOBJ:object):Observable<any>{\r\n    return this.http.post('/api/users',{\r\n      userOBJ:userOBJ\r\n    })\r\n  }\r\n\r\n  //edit a user\r\n  edit_user(userObj:object):Observable<any>{\r\n    return this.http.put('/api/users',{\r\n      userObj:userObj\r\n    })\r\n  }\r\n\r\n  //delete a user\r\n  delete_users(id:string):Observable<any>{\r\n    return this.http.delete(`/api/users/${id}`,{\r\n\r\n    })\r\n  }\r\n\r\n  //add a group\r\n  add_group(groupObj:object):Observable<any>{\r\n    return this.http.post('/api/groups',{\r\n      groupObj:groupObj\r\n    })\r\n  }\r\n\r\n  //edits a group\r\n  edit_group(groupuser,groupid):Observable<any>{\r\n    return this.http.put('/api/groups',{\r\n      groupuser:groupuser,\r\n      groupid:groupid\r\n    })\r\n  }\r\n\r\n  //to delete a user from a group\r\n  delete_group_user(group,name):Observable<any>{\r\n    return this.http.delete(`/api/groups/${group}/${name}`,{\r\n\r\n    })\r\n  }\r\n  \r\n  //deletes a group\r\n  delete_group(id:string):Observable<any>{\r\n    console.log(id)\r\n    return this.http.delete(`/api/groups/${id}`, {})\r\n  }\r\n\r\n  //gets all channels\r\n  get_channels():Observable<any>{\r\n    return this.http.get('/api/channels',{\r\n\r\n    })\r\n  }\r\n\r\n  //edits a channel\r\n  edit_channel(channeluser:string,channelid:string):Observable<any>{\r\n    return this.http.put('/api/channels',{\r\n      channeluser:channeluser,\r\n      channelid:channelid\r\n    })\r\n  }\r\n\r\n  //to delete a user from a channel\r\n  delete_channel_user(channel,name):Observable<any>{\r\n    return this.http.delete(`/api/channels/${channel}/${name}`,{\r\n\r\n    })\r\n  }\r\n\r\n  //delets a channel\r\n  delete_channel(id:string):Observable<any>{\r\n    return this.http.delete(`/api/channels/${id}`,{\r\n      \r\n    })\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}